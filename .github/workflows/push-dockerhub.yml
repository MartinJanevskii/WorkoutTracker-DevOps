name: Docker-push-and-deploy

on:
  push:

env:
  REGISTRY: docker.io
  IMAGE_NAME: workout-tracker

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d 
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: List backend folder files
        run: ls -la backend/

      - name: List folder files
        run: ls -la

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/workout-tracker-backend:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/workout-tracker-frontend:latest

  deploy-to-aks:
    name: Deploy to AKS
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Configure kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 --decode > $HOME/.kube/config

      - name: Ensure target namespace exists
        run: |
          kubectl get ns gym-tracker || kubectl create namespace gym-tracker

      - name: Deploy manifests
        run: |
          kubectl apply -n gym-tracker -f k8s/

      - name: Verify rollout backend
        run: |
          kubectl rollout status deployment/gym-app -n gym-tracker --timeout=90s

      - name: Verify rollout frontend
        run: |
          kubectl rollout status deployment/frontend -n gym-tracker --timeout=90s
